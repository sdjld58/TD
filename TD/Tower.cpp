#include "Tower.h"
#include <iostream>

// 생성자 정의
Tower::Tower(int id, std::string towerName, int nextTowerID, int buildCost, int attackRange, int damage, bool isMagic, int timePerAttack, int targetAmount)
    : id(id), towerName(towerName), nextTowerID(nextTowerID), buildCost(buildCost), attackRange(attackRange), damage(damage), isMagic(isMagic), timePerAttack(timePerAttack), targetAmount(targetAmount) {}

// Getter 함수들 정의
int Tower::getId() const { return id; }
std::string Tower::getTowerName() const { return towerName; }
int Tower::getNextTowerID() const { return nextTowerID; }
int Tower::getBuildCost() const { return buildCost; }
int Tower::getAttackRange() const { return attackRange; }
int Tower::getDamage() const { return damage; }
bool Tower::getIsMagic() const { return isMagic; }
int Tower::getTimePerAttack() const { return timePerAttack; }
int Tower::getTargetAmount() const { return targetAmount; }

// 업그레이드 함수 정의
void Tower::upgrade() {
    if (nextTowerID == 0) {
        std::cout << towerName << "은(는) 이미 최고 단계입니다.\n";
    }
    else {
        id = nextTowerID; // 다음 타워 ID로 업그레이드
        std::cout << towerName << "이(가) 업그레이드되었습니다.\n";
    }
}

// 타워 정보 출력 함수 정의
void Tower::printInfo() const {
    std::cout << "타워 이름: " << towerName << "\n"
        << "ID: " << id << "\n"
        << "설치 비용: " << buildCost << "\n"
        << "공격 사거리: " << attackRange << "\n"
        << "대미지: " << damage << (isMagic ? " (마법 대미지)" : " (물리 대미지)") << "\n"
        << "공격 속도: " << timePerAttack << "틱마다 한 번 공격\n"
        << "목표 수: " << targetAmount << "개\n";
}
